package com.ta;

import com.navinfo.util.Convert;
import com.sun.javafx.scene.layout.region.Margins;

import java.io.ByteArrayOutputStream;
import java.io.UnsupportedEncodingException;
import java.util.zip.Deflater;
import java.util.zip.GZIPOutputStream;

/**
 * Created by chen on 2019/7/5.
 */
public class TaTest {

    @org.junit.Test
    public void testEncode(){
        String tmp = "MIICijCCAXICAQAwRTELMAkGA1UEBhMCQVUxEzARBgNVBAgMClNvbWUtU3RhdGUxITAfBgNVBAoMGEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAO3Wn+DbfhUfC1Sl/RHlqVxYOGqRvpoaJrd5dvPZeTJeE9bALgYCu9BFi0iQqLBV7h+SNYuLxhrHExurRvpUVCqIU4ucftjhObZIdlDoqmjbPKBBlej7Z8IZBousJDcWAAEhnwMe6j8stLd10DLVYL7NkZP0TQojZd3gKtm9MpRW2kao1QECyX7g6ll5WaB+Ry1Fa6VCPCjiH2N4csVlD0OS//00Zez+iFDT8Y+99uvuB64iQAz+rJg702QdRph9D1uk2jdgBoVhfGE7u/oJkHfOpsV9w16eKe2IcjymS3mrIPZtks1UJn9Lgelo9sgmn7tdlBsJbt8nG2QfEwJDM6cCAwEAAaAAMA0GCSqGSIb3DQEBCwUAA4IBAQBAiKb7HsS54vghFVuUiF7ln1f7uq939/p+8JUy6yfdOET69Vz/U4c7I7jz+7/t0fUBeRgEMea9C4EXn4idiFTa/I/K+yuDqinPfRJLBwmV8jknxHY08LWNb/2P+TbV4prjFqBTqGNgK11TZdBG6llwdkfhko8BLZEZZxhhaElraa9kUAuFBqpnt6JRyebsMgRI+4g89yM+DPy5tG900IOFzDcH4kpAbX/kHyo3AQf/ka/nFINzd9cIUUCDufNe2BYOBsuxbNngoDzNF06C8Hl/KieMmzjAmocMLraHDZGTPxFNIF3LSDfB1Cd1vmae9hO9WMdhrURlSKn8FKBUnxAN";
        tmp
        tmp = "308204AE30820396A0030201020208454A300EE445DC84300D06092A864886F70D01010B0500301E311C301A06035504030C134165726F5A686F6E676875616E5369676E4341301E170D3139303730343032353230355A170D3234303730323032353230355A30163114301206035504030C0B313539343031303638343330820122300D06092A864886F70D01010105000382010F003082010A0282010100EBBE75735A285C66796C7A69C067DC849753E49BE5F6CD4038DB01012CB815A527CC05D9411DE88EAD99756D0EF967DEF21176D5E9EA659BD5F2C0092B8CFD7FADAE72254B817B33E27B63B0F65F4E3B50C59387AAC43FA77CCC0D2C55AAC28ADC4CA8DA8D11521AF3BDA400A0C1403011A2D5B70C5D5C1F65958ED1663D0FA6DE7A65018F1AD7A6C14F46D309D28F41A3A2DA34E3FF24B5B6B496101FCB64013C6C1107ACCD208B6BD7A3D353179E22EB888FD834D577A05D20A5FEC9F55463053D8288A96DDB3C3298AC924BC4A17D549B9A894343D6CA7D7733D5CC5BD7F9E84A5203DC0CC01228D46AC8BB18EBA6A140DCD43572012C95C01442EBCC2C070203010001A38201F6308201F2300C0603551D130101FF04023000301F0603551D23041830168014ADA77EC9749AA0FB2A03A293BB5D6379B3BC720C305606082B06010505070101044A3048304606082B06010505073001863A687474703A2F2F686470322E6165726F7A686F6E672E636F6D3A383138302F656A6263612F7075626C69637765622F7374617475732F6F637370307B0603551D2E047430723070A06EA06C866A687474703A2F2F686470322E6165726F7A686F6E672E636F6D3A383138302F656A6263612F7075626C69637765622F776562646973742F63657274646973743F636D643D64656C746163726C266973737565723D434E3D4165726F5A686F6E676875616E5369676E4341301D0603551D250416301406082B0601050507030206082B0601050507030130819D0603551D1F04819530819230818FA069A0678665687474703A2F2F686470322E6165726F7A686F6E672E636F6D3A383138302F656A6263612F7075626C69637765622F776562646973742F63657274646973743F636D643D63726C266973737565723D434E3D4165726F5A686F6E676875616E5369676E4341A222A420301E311C301A06035504030C134165726F5A686F6E676875616E5369676E4341301D0603551D0E04160414C6DF35F717541198F3BDFD8F4B1984D72FF353A2300E0603551D0F0101FF0404030205E0300D06092A864886F70D01010B05000382010100A4AFFC44E5134DB6839A3E300DBD5FBAE08B31BA64E30C59DB2064E7140F0D52DF298E4D63ED7B20A0772B860436D3F1A1E0D5BAD128D5D0318210C5263A36926B9739609F7AA2055BB60CDE80A661C98F71486CC88555756377EA4F136651D30759FD391B86F667ED581F3341FE1F909FDF652B40866265FB885BEB3DDF2DDB0DC12E229F2598D8E37B6D9ABCB3774DF5315BD8F0776D95205CCC70DC5C5E1D29911674D5CDC704FA8456AD8F673BF78A25A023F5FC93AD3B4BA9889640172C1428DD88FD62E393FB62616B6ECE65BEC1351978C02008C862675A407E3D0BABFFC9F0DC777B319EC5ACAB79FDB51D0D78E1943C1C89FB4E7B8CE468A9F0D468";
        tmp
        try {
            byte[] gbks = tmp.getBytes("gbk");
            gbks = Convert.hexStringToBytes(tmp);
            int length = gbks.length;
            byte[] deflaterCompress =deflaterCompress(gbks);
            byte[] gzipCompress = gzipCompress(gbks);

            System.out.println(length+"=="+deflaterCompress.length+"=="+gzipCompress.length);
        } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
        }
    }

    public static byte[] deflaterCompress(byte input[]) {
        ByteArrayOutputStream bos = new ByteArrayOutputStream();
        Deflater compressor = new Deflater(1);
        try {
            compressor.setInput(input);
            compressor.finish();
            final byte[] buf = new byte[2048];
            while (!compressor.finished()) {
                int count = compressor.deflate(buf);
                bos.write(buf, 0, count);
            }
        } finally {
            compressor.end();
        }
        return bos.toByteArray();
    }


    public static byte[] gzipCompress(byte srcBytes[]) {
        ByteArrayOutputStream out = new ByteArrayOutputStream();
        GZIPOutputStream gzip;
        try {
            gzip = new GZIPOutputStream(out);
            gzip.write(srcBytes);
            gzip.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return out.toByteArray();
    }


}
